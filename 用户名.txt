-- 等待游戏加载完成
if not game:IsLoaded() then
    game.Loaded:Wait()
end

local library = {}
library.currentTab = nil
library.flags = {}
local ToggleUI = false

-- 服务获取
local services = setmetatable({}, {
    __index = function(t, k)
        return game:GetService(k)
    end
})
local TweenService = services.TweenService
local UserInputService = services.UserInputService
local RunService = services.RunService
local mouse = services.Players.LocalPlayer:GetMouse()

-- 颜色定义
local TextColor = Color3.fromRGB(240, 240, 240)
local PlaceholderColor = Color3.fromRGB(180, 180, 180)
local DisabledTextColor = Color3.fromRGB(150, 150, 150)

-- 30+种配色方案
local colorSchemes = {
    dark = {
        MainColor = Color3.fromRGB(30, 42, 64),
        Background = Color3.fromRGB(20, 28, 44),
        zyColor = Color3.fromRGB(42, 58, 87),
        beijingColor = Color3.fromRGB(240, 240, 240),
        TextColor = TextColor,
        PlaceholderColor = PlaceholderColor,
        DisabledTextColor = DisabledTextColor
    },
    light = {
        MainColor = Color3.fromRGB(70, 130, 180),
        Background = Color3.fromRGB(240, 248, 255),
        zyColor = Color3.fromRGB(100, 149, 237),
        beijingColor = Color3.fromRGB(25, 25, 112),
        TextColor = Color3.fromRGB(25, 25, 112),
        PlaceholderColor = Color3.fromRGB(100, 100, 120),
        DisabledTextColor = DisabledTextColor
    },
    -- 黑金主题（新增）
    blackgold = {
        MainColor = Color3.fromRGB(20, 20, 20),
        Background = Color3.fromRGB(10, 10, 10),
        zyColor = Color3.fromRGB(40, 40, 40),
        beijingColor = Color3.fromRGB(212, 175, 55),
        TextColor = Color3.fromRGB(212, 175, 55),
        PlaceholderColor = Color3.fromRGB(150, 120, 50),
        DisabledTextColor = Color3.fromRGB(100, 80, 30)
    },
    
    -- 其他30种配色方案
    ocean = {
        MainColor = Color3.fromRGB(0, 105, 148),
        Background = Color3.fromRGB(0, 76, 109),
        zyColor = Color3.fromRGB(0, 139, 188),
        beijingColor = Color3.fromRGB(202, 240, 248),
        TextColor = Color3.fromRGB(202, 240, 248),
        PlaceholderColor = Color3.fromRGB(150, 200, 220)
    },
    
    forest = {
        MainColor = Color3.fromRGB(34, 139, 34),
        Background = Color3.fromRGB(21, 90, 21),
        zyColor = Color3.fromRGB(50, 205, 50),
        beijingColor = Color3.fromRGB(240, 255, 240),
        TextColor = Color3.fromRGB(240, 255, 240),
        PlaceholderColor = Color3.fromRGB(180, 220, 180)
    },
    
    sunset = {
        MainColor = Color3.fromRGB(220, 20, 60),
        Background = Color3.fromRGB(178, 34, 34),
        zyColor = Color3.fromRGB(255, 69, 0),
        beijingColor = Color3.fromRGB(255, 215, 0),
        TextColor = Color3.fromRGB(255, 255, 240),
        PlaceholderColor = Color3.fromRGB(255, 200, 150)
    },
    
    lavender = {
        MainColor = Color3.fromRGB(106, 90, 205),
        Background = Color3.fromRGB(72, 61, 139),
        zyColor = Color3.fromRGB(147, 112, 219),
        beijingColor = Color3.fromRGB(230, 230, 250),
        TextColor = Color3.fromRGB(230, 230, 250),
        PlaceholderColor = Color3.fromRGB(200, 180, 220)
    },
    
    midnight = {
        MainColor = Color3.fromRGB(25, 25, 112),
        Background = Color3.fromRGB(0, 0, 64),
        zyColor = Color3.fromRGB(47, 79, 79),
        beijingColor = Color3.fromRGB(176, 196, 222),
        TextColor = Color3.fromRGB(176, 196, 222),
        PlaceholderColor = Color3.fromRGB(120, 140, 180)
    },
    
    candy = {
        MainColor = Color3.fromRGB(255, 105, 180),
        Background = Color3.fromRGB(219, 112, 147),
        zyColor = Color3.fromRGB(255, 182, 193),
        beijingColor = Color3.fromRGB(255, 255, 255),
        TextColor = Color3.fromRGB(255, 255, 255),
        PlaceholderColor = Color3.fromRGB(255, 220, 230)
    },
    
    gold = {
        MainColor = Color3.fromRGB(184, 134, 11),
        Background = Color3.fromRGB(139, 101, 8),
        zyColor = Color3.fromRGB(218, 165, 32),
        beijingColor = Color3.fromRGB(255, 250, 205),
        TextColor = Color3.fromRGB(255, 250, 205),
        PlaceholderColor = Color3.fromRGB(230, 210, 150)
    },
    
    slate = {
        MainColor = Color3.fromRGB(112, 128, 144),
        Background = Color3.fromRGB(47, 79, 79),
        zyColor = Color3.fromRGB(119, 136, 153),
        beijingColor = Color3.fromRGB(220, 220, 220),
        TextColor = Color3.fromRGB(220, 220, 220),
        PlaceholderColor = Color3.fromRGB(180, 180, 180)
    },
    
    coral = {
        MainColor = Color3.fromRGB(255, 127, 80),
        Background = Color3.fromRGB(205, 92, 92),
        zyColor = Color3.fromRGB(240, 128, 128),
        beijingColor = Color3.fromRGB(255, 255, 240),
        TextColor = Color3.fromRGB(255, 255, 240),
        PlaceholderColor = Color3.fromRGB(255, 200, 180)
    },
    
    emerald = {
        MainColor = Color3.fromRGB(0, 128, 128),
        Background = Color3.fromRGB(0, 100, 100),
        zyColor = Color3.fromRGB(32, 178, 170),
        beijingColor = Color3.fromRGB(175, 238, 238),
        TextColor = Color3.fromRGB(175, 238, 238),
        PlaceholderColor = Color3.fromRGB(150, 220, 220)
    },
    
    berry = {
        MainColor = Color3.fromRGB(138, 43, 226),
        Background = Color3.fromRGB(75, 0, 130),
        zyColor = Color3.fromRGB(147, 112, 219),
        beijingColor = Color3.fromRGB(216, 191, 216),
        TextColor = Color3.fromRGB(216, 191, 216),
        PlaceholderColor = Color3.fromRGB(190, 160, 220)
    },
    
    chocolate = {
        MainColor = Color3.fromRGB(139, 69, 19),
        Background = Color3.fromRGB(101, 67, 33),
        zyColor = Color3.fromRGB(160, 82, 45),
        beijingColor = Color3.fromRGB(245, 222, 179),
        TextColor = Color3.fromRGB(245, 222, 179),
        PlaceholderColor = Color3.fromRGB(210, 180, 140)
    },
    
    steel = {
        MainColor = Color3.fromRGB(70, 130, 180),
        Background = Color3.fromRGB(47, 79, 79),
        zyColor = Color3.fromRGB(119, 136, 153),
        beijingColor = Color3.fromRGB(176, 196, 222),
        TextColor = Color3.fromRGB(176, 196, 222),
        PlaceholderColor = Color3.fromRGB(140, 160, 180)
    },
    
    rose = {
        MainColor = Color3.fromRGB(199, 21, 133),
        Background = Color3.fromRGB(153, 50, 204),
        zyColor = Color3.fromRGB(219, 112, 147),
        beijingColor = Color3.fromRGB(255, 228, 225),
        TextColor = Color3.fromRGB(255, 228, 225),
        PlaceholderColor = Color3.fromRGB(230, 180, 200)
    },
    
    lime = {
        MainColor = Color3.fromRGB(50, 205, 50),
        Background = Color3.fromRGB(34, 139, 34),
        zyColor = Color3.fromRGB(124, 252, 0),
        beijingColor = Color3.fromRGB(240, 255, 240),
        TextColor = Color3.fromRGB(240, 255, 240),
        PlaceholderColor = Color3.fromRGB(200, 255, 200)
    },
    
    peach = {
        MainColor = Color3.fromRGB(255, 165, 0),
        Background = Color3.fromRGB(218, 165, 32),
        zyColor = Color3.fromRGB(255, 215, 0),
        beijingColor = Color3.fromRGB(255, 250, 205),
        TextColor = Color3.fromRGB(255, 250, 205),
        PlaceholderColor = Color3.fromRGB(255, 230, 180)
    },
    
    denim = {
        MainColor = Color3.fromRGB(30, 144, 255),
        Background = Color3.fromRGB(0, 0, 139),
        zyColor = Color3.fromRGB(100, 149, 237),
        beijingColor = Color3.fromRGB(240, 248, 255),
        TextColor = Color3.fromRGB(240, 248, 255),
        PlaceholderColor = Color3.fromRGB(180, 200, 240)
    },
    
    wine = {
        MainColor = Color3.fromRGB(128, 0, 0),
        Background = Color3.fromRGB(101, 67, 33),
        zyColor = Color3.fromRGB(178, 34, 34),
        beijingColor = Color3.fromRGB(255, 240, 245),
        TextColor = Color3.fromRGB(255, 240, 245),
        PlaceholderColor = Color3.fromRGB(220, 180, 180)
    },
    
    mint = {
        MainColor = Color3.fromRGB(0, 199, 140),
        Background = Color3.fromRGB(0, 139, 139),
        zyColor = Color3.fromRGB(64, 224, 208),
        beijingColor = Color3.fromRGB(224, 255, 255),
        TextColor = Color3.fromRGB(224, 255, 255),
        PlaceholderColor = Color3.fromRGB(180, 240, 240)
    },
    
    honey = {
        MainColor = Color3.fromRGB(210, 180, 140),
        Background = Color3.fromRGB(184, 134, 11),
        zyColor = Color3.fromRGB(218, 165, 32),
        beijingColor = Color3.fromRGB(255, 253, 208),
        TextColor = Color3.fromRGB(255, 253, 208),
        PlaceholderColor = Color3.fromRGB(240, 220, 180)
    },
    
    plum = {
        MainColor = Color3.fromRGB(102, 51, 153),
        Background = Color3.fromRGB(75, 0, 130),
        zyColor = Color3.fromRGB(138, 43, 226),
        beijingColor = Color3.fromRGB(221, 160, 221),
        TextColor = Color3.fromRGB(221, 160, 221),
        PlaceholderColor = Color3.fromRGB(200, 160, 220)
    },
    
    sky = {
        MainColor = Color3.fromRGB(135, 206, 235),
        Background = Color3.fromRGB(70, 130, 180),
        zyColor = Color3.fromRGB(173, 216, 230),
        beijingColor = Color3.fromRGB(240, 255, 255),
        TextColor = Color3.fromRGB(240, 255, 255),
        PlaceholderColor = Color3.fromRGB(200, 230, 240)
    },
    
    coffee = {
        MainColor = Color3.fromRGB(111, 78, 55),
        Background = Color3.fromRGB(101, 67, 33),
        zyColor = Color3.fromRGB(139, 69, 19),
        beijingColor = Color3.fromRGB(245, 222, 179),
        TextColor = Color3.fromRGB(245, 222, 179),
        PlaceholderColor = Color3.fromRGB(210, 180, 140)
    },
    
    grape = {
        MainColor = Color3.fromRGB(106, 13, 173),
        Background = Color3.fromRGB(75, 0, 130),
        zyColor = Color3.fromRGB(138, 43, 226),
        beijingColor = Color3.fromRGB(216, 191, 216),
        TextColor = Color3.fromRGB(216, 191, 216),
        PlaceholderColor = Color3.fromRGB(190, 160, 220)
    },
    
    sand = {
        MainColor = Color3.fromRGB(194, 178, 128),
        Background = Color3.fromRGB(139, 125, 89),
        zyColor = Color3.fromRGB(210, 180, 140),
        beijingColor = Color3.fromRGB(253, 245, 230),
        TextColor = Color3.fromRGB(253, 245, 230),
        PlaceholderColor = Color3.fromRGB(230, 220, 190)
    },
    
    ruby = {
        MainColor = Color3.fromRGB(220, 20, 60),
        Background = Color3.fromRGB(178, 34, 34),
        zyColor = Color3.fromRGB(205, 92, 92),
        beijingColor = Color3.fromRGB(255, 240, 245),
        TextColor = Color3.fromRGB(255, 240, 245),
        PlaceholderColor = Color3.fromRGB(240, 200, 200)
    },
    
    jade = {
        MainColor = Color3.fromRGB(0, 168, 107),
        Background = Color3.fromRGB(0, 128, 128),
        zyColor = Color3.fromRGB(0, 199, 140),
        beijingColor = Color3.fromRGB(224, 255, 255),
        TextColor = Color3.fromRGB(224, 255, 255),
        PlaceholderColor = Color3.fromRGB(180, 240, 220)
    },
    
    sapphire = {
        MainColor = Color3.fromRGB(15, 82, 186),
        Background = Color3.fromRGB(0, 0, 139),
        zyColor = Color3.fromRGB(30, 144, 255),
        beijingColor = Color3.fromRGB(240, 248, 255),
        TextColor = Color3.fromRGB(240, 248, 255),
        PlaceholderColor = Color3.fromRGB(180, 200, 240)
    },
    
    amethyst = {
        MainColor = Color3.fromRGB(153, 102, 204),
        Background = Color3.fromRGB(102, 51, 153),
        zyColor = Color3.fromRGB(138, 43, 226),
        beijingColor = Color3.fromRGB(230, 230, 250),
        TextColor = Color3.fromRGB(230, 230, 250),
        PlaceholderColor = Color3.fromRGB(200, 180, 220)
    },
    
    topaz = {
        MainColor = Color3.fromRGB(255, 200, 0),
        Background = Color3.fromRGB(218, 165, 32),
        zyColor = Color3.fromRGB(255, 215, 0),
        beijingColor = Color3.fromRGB(255, 253, 208),
        TextColor = Color3.fromRGB(255, 253, 208),
        PlaceholderColor = Color3.fromRGB(255, 230, 180)
    },
    
    obsidian = {
        MainColor = Color3.fromRGB(20, 20, 20),
        Background = Color3.fromRGB(10, 10, 10),
        zyColor = Color3.fromRGB(40, 40, 40),
        beijingColor = Color3.fromRGB(200, 200, 200),
        TextColor = Color3.fromRGB(200, 200, 200),
        PlaceholderColor = Color3.fromRGB(150, 150, 150)
    },
    
    pearl = {
        MainColor = Color3.fromRGB(234, 224, 200),
        Background = Color3.fromRGB(210, 180, 140),
        zyColor = Color3.fromRGB(245, 222, 179),
        beijingColor = Color3.fromRGB(25, 25, 112),
        TextColor = Color3.fromRGB(25, 25, 112),
        PlaceholderColor = Color3.fromRGB(100, 100, 120)
    }
}

-- 动画函数
function Tween(obj, t, data)
    TweenService:Create(obj, TweenInfo.new(t[1], Enum.EasingStyle[t[2]], Enum.EasingDirection[t[3]]), data):Play()
    return true
end

-- 波纹效果
function Ripple(obj)
    spawn(function()
        obj.ClipsDescendants = true
        local Ripple = Instance.new("ImageLabel")
        Ripple.Name = "Ripple"
        Ripple.Parent = obj
        Ripple.BackgroundTransparency = 1
        Ripple.ZIndex = 8
        Ripple.Image = "rbxassetid://2708891598"
        Ripple.ImageTransparency = 0.8
        Ripple.ScaleType = Enum.ScaleType.Fit
        Ripple.Position = UDim2.new(
            (mouse.X - Ripple.AbsolutePosition.X) / obj.AbsoluteSize.X,
            0,
            (mouse.Y - Ripple.AbsolutePosition.Y) / obj.AbsoluteSize.Y,
            0
        )
        
        Tween(Ripple, {0.3, "Linear", "InOut"}, {Position = UDim2.new(-5.5, 0, -5.5, 0), Size = UDim2.new(12, 0, 12, 0)})
        wait(0.15)
        Tween(Ripple, {0.3, "Linear", "InOut"}, {ImageTransparency = 1})
        wait(0.3)
        Ripple:Destroy()
    end)
end

-- 标签页切换
local switchingTabs = false
function switchTab(new)
    if switchingTabs then return end
    
    local old = library.currentTab
    if old == nil then
        new[2].Visible = true
        library.currentTab = new
        Tween(new[1], {0.1}, {ImageTransparency = 0})
        Tween(new[1].TabText, {0.1}, {TextTransparency = 0})
        return
    end
    
    if old[1] == new[1] then return end
    
    switchingTabs = true
    library.currentTab = new
    
    Tween(old[1], {0.1}, {ImageTransparency = 0.2})
    Tween(new[1], {0.1}, {ImageTransparency = 0})
    Tween(old[1].TabText, {0.1}, {TextTransparency = 0.2})
    Tween(new[1].TabText, {0.1}, {TextTransparency = 0})
    
    old[2].Visible = false
    new[2].Visible = true
    
    task.wait(0.1)
    switchingTabs = false
end

-- 拖拽功能
function drag(frame, hold)
    hold = hold or frame
    local dragging, dragInput, dragStart, startPos
    
    local function update(input)
        local delta = input.Position - dragStart
        frame.Position = UDim2.new(
            startPos.X.Scale, startPos.X.Offset + delta.X,
            startPos.Y.Scale, startPos.Y.Offset + delta.Y
        )
    end
    
    hold.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = frame.Position
            
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)
    
    frame.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            dragInput = input
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            update(input)
        end
    end)
end

-- 主库函数
function library.new(name, theme)
    -- 清理旧UI
    for _, v in next, services.CoreGui:GetChildren() do
        if v.Name == "REN" then v:Destroy() end
    end
    
    -- 设置主题
    local currentTheme = theme or "dark"
    local colors = colorSchemes[currentTheme] or colorSchemes.dark
    
    -- 应用颜色方案
    local function applyColorScheme(schemeName)
        currentTheme = schemeName
        colors = colorSchemes[schemeName] or colorSchemes.dark
        
        -- 更新颜色变量
        MainColor = colors.MainColor
        Background = colors.Background
        zyColor = colors.zyColor
        beijingColor = colors.beijingColor
        TextColor = colors.TextColor
        PlaceholderColor = colors.PlaceholderColor
        DisabledTextColor = colors.DisabledTextColor
        
        -- 更新UI元素
        if Main then
            Main.BackgroundColor3 = Background
            Main.BorderColor3 = MainColor
            SB.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            SB.BorderColor3 = MainColor
            SideG.Color = ColorSequence.new({ColorSequenceKeypoint.new(0, zyColor), ColorSequenceKeypoint.new(1, zyColor)})
            SBG.Color = ColorSequence.new({ColorSequenceKeypoint.new(0, zyColor), ColorSequenceKeypoint.new(1, zyColor)})
            
            if ScriptTitle then ScriptTitle.TextColor3 = TextColor end
            if Open then Open.TextColor3 = TextColor end
            
            if library.currentTab then
                local tabIco = library.currentTab[1]
                if tabIco and tabIco.TabText then
                    tabIco.TabText.TextColor3 = TextColor
                end
            end
        end
    end

    -- 创建主UI
    local dogent = Instance.new("ScreenGui")
    dogent.Name = "REN"
    dogent.Parent = services.CoreGui
    if syn and syn.protect_gui then syn.protect_gui(dogent) end

    local Main = Instance.new("Frame")
    Main.Name = "Main"
    Main.Parent = dogent
    Main.AnchorPoint = Vector2.new(0.5, 0.5)
    Main.BackgroundColor3 = Background
    Main.BorderColor3 = MainColor
    Main.Position = UDim2.new(0.5, 0, 0.5, 0)
    Main.Size = UDim2.new(0, 572, 0, 353)
    Main.ZIndex = 1
    Main.Active = true

    -- [其他UI元素创建代码...]

    -- 窗口功能
    local window = {}
    
    function window:Tab(name, icon)
        local Tab = Instance.new("ScrollingFrame")
        -- [标签页创建代码...]
        
        local tab = {}
        
        function tab:section(name, TabVal)
            local Section = Instance.new("Frame")
            -- [区域创建代码...]
            
            local section = {}
            
            function section:Button(text, callback)
                -- [按钮创建代码...]
            end
            
            -- [其他控件创建函数...]
            
            return section
        end
        
        return tab
    end

    -- 添加颜色选择器
    local function addColorPickerToUI(window)
        local settingsTab = window:Tab("设置", "rbxassetid://3926305904")
        local appearanceSection = settingsTab:section("外观设置", true)
        
        local schemeNames = {}
        for name in pairs(colorSchemes) do table.insert(schemeNames, name) end
        table.sort(schemeNames)
        
        appearanceSection:Dropdown("颜色方案", "color_scheme", schemeNames, function(selected)
            applyColorScheme(selected)
        end)
    end

    addColorPickerToUI(window)
    
    -- 初始应用颜色方案
    applyColorScheme(currentTheme)
    
    return window
end

-- 全局函数
function library.SetHighContrast(enabled)
    -- [高对比度设置代码...]
end

function library.SetColorScheme(schemeName)
    -- [颜色方案设置代码...]
end

return library
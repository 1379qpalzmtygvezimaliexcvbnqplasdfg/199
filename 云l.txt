repeat
    task.wait()
until game:IsLoaded()

local library = {}
local ToggleUI = false
library.currentTab = nil
library.flags = {}

local services = setmetatable({}, {
    __index = function(t, k)
        return game.GetService(game, k)
    end,
})

local mouse = services.Players.LocalPlayer:GetMouse()

-- ========== 黑洞主题全局颜色变量 ==========
local BlackHoleBlack = Color3.fromRGB(5, 5, 10)        -- 深黑色，宇宙背景
local AccretionDiskPurple = Color3.fromRGB(30, 5, 40)  -- 吸积盘紫色
local EventHorizonBlue = Color3.fromRGB(0, 100, 150)   -- 事件视界蓝光
local StarLight = Color3.fromRGB(220, 220, 255)        -- 星光（用于文本和图标）
local CosmicPink = Color3.fromRGB(150, 50, 150)        -- 宇宙粉红（点缀色）

-- 文本和UI元素颜色
local TextColor = StarLight
local PlaceholderColor = Color3.fromRGB(150, 150, 180)  -- 淡紫色占位符
local DisabledTextColor = Color3.fromRGB(100, 100, 120)

-- 高质量黑洞图片资源
local BlackHoleBackground = "rbxassetid://10112662402"  -- 黑洞背景图
local BlackHoleOverlay = "rbxassetid://10112662403"    -- 半透明黑洞叠加层
local EventHorizonGlow = "rbxassetid://10112662404"    -- 事件视界光晕
local BlackHoleMinimizedIcon = "rbxassetid://10112662399"  -- 黑洞关闭图标
local BlackHoleMaximizedIcon = "rbxassetid://10112662400"  -- 黑洞开启图标
local BlackHoleCenter = "rbxassetid://10112662401"     -- 黑洞中心点
local AccretionDisk = "rbxassetid://9929278097"        -- 吸积盘纹理

function Tween(obj, t, data)
    services.TweenService
        :Create(obj, TweenInfo.new(t[1], Enum.EasingStyle[t[2]], Enum.EasingDirection[t[3]]), data)
        :Play()
    return true
end

function Ripple(obj)
    spawn(function()
        if obj.ClipsDescendants ~= true then
            obj.ClipsDescendants = true
        end
        local Ripple = Instance.new("ImageLabel")
        Ripple.Name = "Ripple"
        Ripple.Parent = obj
        Ripple.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        Ripple.BackgroundTransparency = 1.000
        Ripple.ZIndex = 8
        Ripple.Image = "rbxassetid://2708891598"
        Ripple.ImageTransparency = 0.800
        Ripple.ScaleType = Enum.ScaleType.Fit
        Ripple.ImageColor3 = EventHorizonBlue  -- 使用事件视界蓝色作为涟漪效果
        Ripple.Position = UDim2.new(
            (mouse.X - Ripple.AbsolutePosition.X) / obj.AbsoluteSize.X,
            0,
            (mouse.Y - Ripple.AbsolutePosition.Y) / obj.AbsoluteSize.Y,
            0
        )
        Tween(
            Ripple,
            { 0.3, "Linear", "InOut" },
            { Position = UDim2.new(-5.5, 0, -5.5, 0), Size = UDim2.new(12, 0, 12, 0) }
        )
        wait(0.15)
        Tween(Ripple, { 0.3, "Linear", "InOut" }, { ImageTransparency = 1 })
        wait(0.3)
        Ripple:Destroy()
    end)
end

local toggled = false
local switchingTabs = false

function switchTab(new)
    if switchingTabs then
        return
    end
    local old = library.currentTab
    if old == nil then
        new[2].Visible = true
        library.currentTab = new
        services.TweenService:Create(new[1], TweenInfo.new(0.1), { ImageTransparency = 0 }):Play()
        services.TweenService:Create(new[1].TabText, TweenInfo.new(0.1), { TextTransparency = 0 }):Play()
        return
    end
    if old[1] == new[1] then
        return
    end
    switchingTabs = true
    library.currentTab = new
    services.TweenService:Create(old[1], TweenInfo.new(0.1), { ImageTransparency = 0.2 }):Play()
    services.TweenService:Create(new[1], TweenInfo.new(0.1), { ImageTransparency = 0 }):Play()
    services.TweenService:Create(old[1].TabText, TweenInfo.new(0.1), { TextTransparency = 0.2 }):Play()
    services.TweenService:Create(new[1].TabText, TweenInfo.new(0.1), { TextTransparency = 0 }):Play()
    old[2].Visible = false
    new[2].Visible = true
    task.wait(0.1)
    switchingTabs = false
end

function drag(frame, hold)
    if not hold then
        hold = frame
    end
    local dragging
    local dragInput
    local dragStart
    local startPos
    local function update(input)
        local delta = input.Position - dragStart
        frame.Position =
            UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
    hold.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = frame.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)
    frame.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            dragInput = input
        end
    end)
    services.UserInputService.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            update(input)
        end
    end)
end

function library.new(library, name, theme)
    for _, v in next, services.CoreGui:GetChildren() do
        if v.Name == "REN" then
            v:Destroy()
        end
    end
    
    -- 应用黑洞主题
    MainColor = AccretionDiskPurple
    Background = BlackHoleBlack
    zyColor = AccretionDiskPurple
    beijingColor = StarLight

    local dogent = Instance.new("ScreenGui")
    local Main = Instance.new("Frame")
    local TabMain = Instance.new("Frame")
    local MainC = Instance.new("UICorner")
    local SB = Instance.new("Frame")
    local SBC = Instance.new("UICorner")
    local Side = Instance.new("Frame")
    local SideG = Instance.new("UIGradient")
    local TabBtns = Instance.new("ScrollingFrame")
    local TabBtnsL = Instance.new("UIListLayout")
    local ScriptTitle = Instance.new("TextLabel")
    local SBG = Instance.new("UIGradient")
    local Open = Instance.new("ImageButton")
    local UIG = Instance.new("UIGradient")
    local DropShadowHolder = Instance.new("Frame")
    local DropShadow = Instance.new("ImageLabel")
    local UICornerMain = Instance.new("UICorner")
    local UIGradient = Instance.new("UIGradient")
    local UIGradientTitle = Instance.new("UIGradient")
    
    if syn and syn.protect_gui then
        syn.protect_gui(dogent)
    end
    
    dogent.Name = "REN"
    dogent.Parent = services.CoreGui
    
    function UiDestroy()
        dogent:Destroy()
    end
    
    function ToggleUILib()
        if not ToggleUI then
            dogent.Enabled = false
            ToggleUI = true
        else
            ToggleUI = false
            dogent.Enabled = true
        end
    end
    
    -- ========== 主窗口设置 ==========
    Main.Name = "Main"
    Main.Parent = dogent
    Main.AnchorPoint = Vector2.new(0.5, 0.5)
    Main.BackgroundColor3 = Background
    Main.BackgroundTransparency = 0.7  -- 70%透明
    Main.BorderSizePixel = 0
    Main.Position = UDim2.new(0.5, 0, 0.5, 0)
    Main.Size = UDim2.new(0, 572, 0, 353)
    Main.ZIndex = 1
    Main.Active = true
    Main.Draggable = true
    
    -- 添加高质量黑洞背景图
    local BackgroundImage = Instance.new("ImageLabel")
    BackgroundImage.Name = "BlackHoleBackground"
    BackgroundImage.Parent = Main
    BackgroundImage.BackgroundTransparency = 1
    BackgroundImage.Size = UDim2.new(1, 0, 1, 0)
    BackgroundImage.Image = BlackHoleBackground
    BackgroundImage.ImageTransparency = 0.3  -- 70%可见
    BackgroundImage.ScaleType = Enum.ScaleType.Crop
    BackgroundImage.ZIndex = -1
    
    -- 添加半透明黑洞叠加层
    local OverlayImage = Instance.new("ImageLabel")
    OverlayImage.Name = "BlackHoleOverlay"
    OverlayImage.Parent = Main
    OverlayImage.BackgroundTransparency = 1
    OverlayImage.Size = UDim2.new(1, 0, 1, 0)
    OverlayImage.Image = BlackHoleOverlay
    OverlayImage.ImageTransparency = 0.7  -- 30%可见
    OverlayImage.BlendMode = Enum.BlendMode.Add
    OverlayImage.ZIndex = -1
    
    -- 添加动态旋转效果
    spawn(function()
        while wait(0.1) do
            BackgroundImage.Rotation = BackgroundImage.Rotation + 0.1
            OverlayImage.Rotation = OverlayImage.Rotation - 0.15
        end
    end)
    
    -- 添加事件视界光晕效果
    local EventHorizonGlow = Instance.new("ImageLabel")
    EventHorizonGlow.Name = "EventHorizonGlow"
    EventHorizonGlow.Parent = Main
    EventHorizonGlow.BackgroundTransparency = 1
    EventHorizonGlow.AnchorPoint = Vector2.new(0.5, 0.5)
    EventHorizonGlow.Position = UDim2.new(0.5, 0, 0.5, 0)
    EventHorizonGlow.Size = UDim2.new(1.2, 0, 1.2, 0)
    EventHorizonGlow.Image = EventHorizonGlow
    EventHorizonGlow.ImageColor3 = EventHorizonBlue
    EventHorizonGlow.ImageTransparency = 0.8
    EventHorizonGlow.ZIndex = -1
    
    -- 光晕脉冲动画
    spawn(function()
        while wait(1.5) do
            services.TweenService:Create(EventHorizonGlow, TweenInfo.new(0.8), {
                Size = UDim2.new(1.5, 0, 1.5, 0),
                ImageTransparency = 0.9
            }):Play()
            wait(0.8)
            services.TweenService:Create(EventHorizonGlow, TweenInfo.new(0.8), {
                Size = UDim2.new(1.2, 0, 1.2, 0),
                ImageTransparency = 0.8
            }):Play()
        end
    end)
    
    -- 添加星光效果
    for i = 1, 30 do
        local Star = Instance.new("Frame")
        Star.Name = "Star_"..i
        Star.Parent = Main
        Star.BackgroundColor3 = StarLight
        Star.BorderSizePixel = 0
        Star.Size = UDim2.new(0, math.random(1, 3), 0, math.random(1, 3))
        Star.Position = UDim2.new(math.random(), 0, math.random(), 0)
        Star.ZIndex = 0
        
        -- 星光闪烁效果
        spawn(function()
            while wait(math.random(1, 3)) do
                services.TweenService:Create(Star, TweenInfo.new(0.5), {
                    BackgroundTransparency = math.random(0.3, 0.7)
                }):Play()
            end
        end)
    end
    
    services.UserInputService.InputEnded:Connect(function(input)
        if input.KeyCode == Enum.KeyCode.LeftControl then
            if Main.Visible == true then
                Main.Visible = false
            else
                Main.Visible = true
            end
        end
    end)
    
    drag(Main)
    UICornerMain.Parent = Main
    UICornerMain.CornerRadius = UDim.new(0, 3)
    
    DropShadowHolder.Name = "DropShadowHolder"
    DropShadowHolder.Parent = Main
    DropShadowHolder.BackgroundTransparency = 1.000
    DropShadowHolder.BorderSizePixel = 0
    DropShadowHolder.Size = UDim2.new(1, 0, 1, 0)
    DropShadowHolder.BorderColor3 = Color3.fromRGB(255, 255, 255)
    DropShadowHolder.ZIndex = 0
    
    DropShadow.Name = "DropShadow"
    DropShadow.Parent = DropShadowHolder
    DropShadow.AnchorPoint = Vector2.new(0.5, 0.5)
    DropShadow.BackgroundTransparency = 1.000
    DropShadow.BorderSizePixel = 0
    DropShadow.Position = UDim2.new(0.5, 0, 0.5, 0)
    DropShadow.Size = UDim2.new(1, 43, 1, 43)
    DropShadow.ZIndex = 0
    DropShadow.Image = "rbxassetid://6015897843"
    DropShadow.ImageColor3 = Color3.fromRGB(255, 255, 255)
    DropShadow.ImageTransparency = 0.500
    DropShadow.ScaleType = Enum.ScaleType.Slice
    DropShadow.SliceCenter = Rect.new(49, 49, 450, 450)
    
    UIGradient.Color = ColorSequence.new({
        ColorSequenceKeypoint.new(0.00, Color3.fromRGB(0, 20, 40)),    -- 深蓝
        ColorSequenceKeypoint.new(1.00, Color3.fromRGB(0, 50, 80))
    })
    UIGradient.Parent = DropShadow
    
    local TweenService = game:GetService("TweenService")
    local tweeninfo = TweenInfo.new(7, Enum.EasingStyle.Linear, Enum.EasingDirection.In, -1)
    local tween = TweenService:Create(UIGradient, tweeninfo, { Rotation = 360 })
    tween:Play()
    
    function toggleui()
        toggled = not toggled
        spawn(function()
            if toggled then
                wait(0.3)
            end
        end)
        Tween(Main, { 0.3, "Sine", "InOut" }, { Size = UDim2.new(0, 609, 0, (toggled and 505 or 0)) })
    end
    
    TabMain.Name = "TabMain"
    TabMain.Parent = Main
    TabMain.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    TabMain.BackgroundTransparency = 1.000
    TabMain.Position = UDim2.new(0.217000037, 0, 0, 3)
    TabMain.Size = UDim2.new(0, 448, 0, 353)
    
    MainC.CornerRadius = UDim.new(0, 5.5)
    MainC.Name = "MainC"
    MainC.Parent = Main
    
    SB.Name = "SB"
    SB.Parent = Main
    SB.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    SB.BorderColor3 = MainColor
    SB.Size = UDim2.new(0, 8, 0, 353)
    
    SBC.CornerRadius = UDim.new(0, 6)
    SBC.Name = "SBC"
    SBC.Parent = SB
    
    Side.Name = "Side"
    Side.Parent = SB
    Side.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Side.BackgroundTransparency = 0.8  -- 80%透明
    Side.BorderColor3 = Color3.fromRGB(255, 255, 255)
    Side.BorderSizePixel = 0
    Side.ClipsDescendants = true
    Side.Position = UDim2.new(1, 0, 0, 0)
    Side.Size = UDim2.new(0, 110, 0, 353)
    
    -- 添加吸积盘纹理
    local SideTexture = Instance.new("ImageLabel")
    SideTexture.Name = "SideTexture"
    SideTexture.Parent = Side
    SideTexture.BackgroundTransparency = 1
    SideTexture.Size = UDim2.new(1, 0, 1, 0)
    SideTexture.Image = AccretionDisk
    SideTexture.ImageColor3 = Color3.fromRGB(50, 10, 60)
    SideTexture.ImageTransparency = 0.7
    SideTexture.ZIndex = -1
    
    -- 吸积盘旋转动画
    spawn(function()
        while wait() do
            SideTexture.Rotation = SideTexture.Rotation + 0.2
        end
    end)
    
    SideG.Color =
        ColorSequence.new({ ColorSequenceKeypoint.new(0.00, zyColor), ColorSequenceKeypoint.new(1.00, zyColor) })
    SideG.Rotation = 90
    SideG.Name = "SideG"
    SideG.Parent = Side
    
    TabBtns.Name = "TabBtns"
    TabBtns.Parent = Side
    TabBtns.Active = true
    TabBtns.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    TabBtns.BackgroundTransparency = 1.000
    TabBtns.BorderSizePixel = 0
    TabBtns.Position = UDim2.new(0, 0, 0.0973535776, 0)
    TabBtns.Size = UDim2.new(0, 110, 0, 318)
    TabBtns.CanvasSize = UDim2.new(0, 0, 1, 0)
    TabBtns.ScrollBarThickness = 0
    
    TabBtnsL.Name = "TabBtnsL"
    TabBtnsL.Parent = TabBtns
    TabBtnsL.SortOrder = Enum.SortOrder.LayoutOrder
    TabBtnsL.Padding = UDim.new(0, 12)
    
    ScriptTitle.Name = "ScriptTitle"
    ScriptTitle.Parent = Side
    ScriptTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    ScriptTitle.BackgroundTransparency = 1.000
    ScriptTitle.Position = UDim2.new(0, 0, 0.00953488424, 0)
    ScriptTitle.Size = UDim2.new(0, 102, 0, 20)
    ScriptTitle.Font = Enum.Font.GothamBlack
    ScriptTitle.Text = name
    ScriptTitle.TextColor3 = TextColor
    ScriptTitle.TextSize = 16.000
    ScriptTitle.TextTransparency = 0
    ScriptTitle.TextScaled = true
    ScriptTitle.TextXAlignment = Enum.TextXAlignment.Left
    
    local TitleStroke = Instance.new("UIStroke")
    TitleStroke.Color = Color3.fromRGB(10, 10, 30)
    TitleStroke.Thickness = 1.5
    TitleStroke.Transparency = 0.3
    TitleStroke.Parent = ScriptTitle
    
    UIGradientTitle.Parent = ScriptTitle
    UIGradientTitle.Color = ColorSequence.new({
        ColorSequenceKeypoint.new(0.00, Color3.fromRGB(20, 10, 40)),  -- 暗紫
        ColorSequenceKeypoint.new(0.50, Color3.fromRGB(0, 50, 100)),  -- 深蓝
        ColorSequenceKeypoint.new(1.00, Color3.fromRGB(20, 10, 40))   -- 暗紫
    })
    
    local function NPLHKB_fake_script()
        local script = Instance.new("LocalScript", ScriptTitle)
        local button = script.Parent
        local gradient = button.UIGradient
        local ts = game:GetService("TweenService")
        local ti = TweenInfo.new(1, Enum.EasingStyle.Linear, Enum.EasingDirection.Out)
        local offset = { Offset = Vector2.new(1, 0) }
        local create = ts:Create(gradient, ti, offset)
        local startingPos = Vector2.new(-1, 0)
        local list = {}
        local s, kpt = ColorSequence.new, ColorSequenceKeypoint.new
        local counter = 0
        local status = "down"
        gradient.Offset = startingPos
        local function rainbowColors()
            local sat, val = 255, 255
            for i = 1, 10 do
                local hue = i * 17
                table.insert(list, Color3.fromHSV(hue / 255, sat / 255, val / 255))
            end
        end
        rainbowColors()
        gradient.Color = s({ kpt(0, list[#list]), kpt(0.5, list[#list - 1]), kpt(1, list[#list - 2]) })
        counter = #list
        local function animate()
            create:Play()
            create.Completed:Wait()
            gradient.Offset = startingPos
            gradient.Rotation = 180
            if counter == #list - 1 and status == "down" then
                gradient.Color =
                    s({ kpt(0, gradient.Color.Keypoints[1].Value), kpt(0.5, list[#list]), kpt(1, list[1]) })
                counter = 1
                status = "up"
            elseif counter == #list and status == "down" then
                gradient.Color = s({ kpt(0, gradient.Color.Keypoints[1].Value), kpt(0.5, list[1]), kpt(1, list[2]) })
                counter = 2
                status = "up"
            elseif counter <= #list - 2 and status == "down" then
                gradient.Color = s({
                    kpt(0, gradient.Color.Keypoints[1].Value),
                    kpt(0.5, list[counter + 1]),
                    kpt(1, list[counter + 2]),
                })
                counter = counter + 2
                status = "up"
            end
            create:Play()
            create.Completed:Wait()
            gradient.Offset = startingPos
            gradient.Rotation = 0
            if counter == #list - 1 and status == "up" then
                gradient.Color =
                    s({ kpt(0, list[1]), kpt(0.5, list[#list]), kpt(1, gradient.Color.Keypoints[3].Value) })
                counter = 1
                status = "down"
            elseif counter == #list and status == "up" then
                gradient.Color = s({ kpt(0, list[2]), kpt(0.5, list[1]), kpt(1, gradient.Color.Keypoints[3].Value) })
                counter = 2
                status = "down"
            elseif counter <= #list - 2 and status == "up" then
                gradient.Color = s({
                    kpt(0, list[counter + 2]),
                    kpt(0.5, list[counter + 1]),
                    kpt(1, gradient.Color.Keypoints[3].Value),
                })
                counter = counter + 2
                status = "down"
            end
            animate()
        end
        animate()
    end
    coroutine.wrap(NPLHKB_fake_script)()
    
    SBG.Color =
        ColorSequence.new({ ColorSequenceKeypoint.new(0.00, zyColor), ColorSequenceKeypoint.new(1.00, zyColor) })
    SBG.Rotation = 90
    SBG.Name = "SBG"
    SBG.Parent = SB
    
    TabBtnsL:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
        TabBtns.CanvasSize = UDim2.new(0, 0, 0, TabBtnsL.AbsoluteContentSize.Y + 18)
    end)
    
    -- ========== 黑洞主题开关按钮 ==========
    Open = Instance.new("ImageButton")
    Open.Name = "Open"
    Open.Parent = dogent
    Open.BackgroundColor3 = Color3.fromRGB(5, 5, 10)  -- 深空背景色
    Open.Position = UDim2.new(0.00829315186, 0, 0.31107837, 0)
    Open.Size = UDim2.new(0, 50, 0, 50)
    Open.Image = BlackHoleMinimizedIcon  -- 使用黑洞图标
    Open.ScaleType = Enum.ScaleType.Fit
    Open.ZIndex = 10

    -- 添加黑洞效果
    local BlackHoleEffect = Instance.new("ImageLabel")
    BlackHoleEffect.Name = "BlackHoleEffect"
    BlackHoleEffect.Parent = Open
    BlackHoleEffect.BackgroundTransparency = 1
    BlackHoleEffect.Size = UDim2.new(1.5, 0, 1.5, 0)
    BlackHoleEffect.AnchorPoint = Vector2.new(0.5, 0.5)
    BlackHoleEffect.Position = UDim2.new(0.5, 0, 0.5, 0)
    BlackHoleEffect.Image = BlackHoleCenter  -- 黑洞中心点
    BlackHoleEffect.ImageColor3 = EventHorizonBlue
    BlackHoleEffect.ZIndex = 9
    BlackHoleEffect.ImageTransparency = 0.3

    -- 添加旋转动画
    spawn(function()
        while wait() do
            BlackHoleEffect.Rotation = BlackHoleEffect.Rotation + 1
        end
    end)

    -- 添加圆形效果
    local OpenCorner = Instance.new("UICorner")
    OpenCorner.CornerRadius = UDim.new(1, 0)
    OpenCorner.Parent = Open

    -- 添加发光边框
    local OpenStroke = Instance.new("UIStroke")
    OpenStroke.Color = EventHorizonBlue
    OpenStroke.Thickness = 1.5
    OpenStroke.Transparency = 0.3
    OpenStroke.Parent = Open

    -- 添加内边距
    local OpenPadding = Instance.new("UIPadding")
    OpenPadding.Parent = Open
    OpenPadding.PaddingLeft = UDim.new(0.15, 0)
    OpenPadding.PaddingRight = UDim.new(0.15, 0)
    OpenPadding.PaddingTop = UDim.new(0.15, 0)
    OpenPadding.PaddingBottom = UDim.new(0.15, 0)

    -- 添加状态变量来跟踪UI是否显示
    local uiVisible = true
    local buttonDragging = false
    local dragStartPos = UDim2.new()
    local dragOffset = Vector2.new()

    -- 更新图标的函数
    local function updateIcon()
        if uiVisible then
            Open.Image = BlackHoleMinimizedIcon
            BlackHoleEffect.ImageTransparency = 0.3
            services.TweenService:Create(OpenStroke, TweenInfo.new(0.3), {
                Thickness = 1.5,
                Color = EventHorizonBlue
            }):Play()
        else
            Open.Image = BlackHoleMaximizedIcon
            BlackHoleEffect.ImageTransparency = 0.1
            services.TweenService:Create(OpenStroke, TweenInfo.new(0.3), {
                Thickness = 2.5,
                Color = CosmicPink
            }):Play()
        end
    end

    -- 添加悬停动画效果
    Open.MouseEnter:Connect(function()
        if not buttonDragging then
            services.TweenService:Create(Open, TweenInfo.new(0.2), {
                Size = UDim2.new(0, 55, 0, 55),
                BackgroundColor3 = Color3.fromRGB(15, 15, 25)
            }):Play()
            services.TweenService:Create(BlackHoleEffect, TweenInfo.new(0.2), {
                Size = UDim2.new(1.8, 0, 1.8, 0),
                ImageTransparency = 0.1
            }):Play()
            services.TweenService:Create(OpenStroke, TweenInfo.new(0.2), {
                Thickness = 2.0,
                Transparency = 0
            }):Play()
        end
    end)

    Open.MouseLeave:Connect(function()
        if not buttonDragging then
            services.TweenService:Create(Open, TweenInfo.new(0.2), {
                Size = UDim2.new(0, 50, 0, 50),
                BackgroundColor3 = Color3.fromRGB(5, 5, 10)
            }):Play()
            services.TweenService:Create(BlackHoleEffect, TweenInfo.new(0.2), {
                Size = UDim2.new(1.5, 0, 1.5, 0),
                ImageTransparency = 0.3
            }):Play()
            services.TweenService:Create(OpenStroke, TweenInfo.new(0.2), {
                Thickness = 1.5,
                Transparency = 0.3
            }):Play()
        end
    end)

    -- 添加点击效果
    Open.MouseButton1Down:Connect(function()
        dragStartPos = Open.Position
        dragOffset = Vector2.new(
            mouse.X - Open.AbsolutePosition.X,
            mouse.Y - Open.AbsolutePosition.Y
        )
        buttonDragging = true
        
        services.TweenService:Create(Open, TweenInfo.new(0.1), {
            Size = UDim2.new(0, 45, 0, 45)
        }):Play()
        services.TweenService:Create(BlackHoleEffect, TweenInfo.new(0.1), {
            Size = UDim2.new(1.3, 0, 1.3, 0),
            ImageTransparency = 0
        }):Play()
    end)

    Open.MouseButton1Up:Connect(function()
        buttonDragging = false
        
        services.TweenService:Create(Open, TweenInfo.new(0.1), {
            Size = UDim2.new(0, 50, 0, 50)
        }):Play()
        services.TweenService:Create(BlackHoleEffect, TweenInfo.new(0.1), {
            Size = UDim2.new(1.5, 0, 1.5, 0),
            ImageTransparency = 0.3
        }):Play()
        
        -- 如果没有移动太多距离，则视为点击
        if (Open.Position.X.Offset - dragStartPos.X.Offset) < 5 and 
           (Open.Position.Y.Offset - dragStartPos.Y.Offset) < 5 then
            uiVisible = not uiVisible
            Main.Visible = uiVisible
            updateIcon()
            
            services.TweenService:Create(Open, TweenInfo.new(0.2), {
                Rotation = Open.Rotation + 180
            }):Play()
        end
    end)

    -- 平滑更新按钮位置
    game:GetService("RunService").Heartbeat:Connect(function()
        if buttonDragging then
            local newX = math.clamp(mouse.X - dragOffset.X, 0, workspace.CurrentCamera.ViewportSize.X - Open.AbsoluteSize.X)
            local newY = math.clamp(mouse.Y - dragOffset.Y, 0, workspace.CurrentCamera.ViewportSize.Y - Open.AbsoluteSize.Y)
            
            Open.Position = UDim2.new(0, newX, 0, newY)
        end
    end)

    -- 初始化图标
    updateIcon()
    
    -- ========== 窗口拖动系统 ==========
    local dragging = false
    local dragInput
    local dragStart = Vector2.new()
    local startPos = UDim2.new()
    
    local function onInputBegan(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = Main.Position
            
            services.TweenService:Create(Main, TweenInfo.new(0.1), {
                BackgroundColor3 = Background:lerp(Color3.new(1, 1, 1), 0.05)
            }):Play()
            
            local connection
            connection = input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                    connection:Disconnect()
                    
                    services.TweenService:Create(Main, TweenInfo.new(0.1), {
                        BackgroundColor3 = Background
                    }):Play()
                end
            end)
        end
    end
    
    local function updateDrag(input)
        if not dragging then return end
        
        local delta = input.Position - dragStart
        local newX = startPos.X.Offset + delta.X
        local newY = startPos.Y.Offset + delta.Y
        
        local screenSize = workspace.CurrentCamera.ViewportSize
        newX = math.clamp(newX, 10, screenSize.X - Main.AbsoluteSize.X - 10)
        newY = math.clamp(newY, 10, screenSize.Y - Main.AbsoluteSize.Y - 10)
        
        Main.Position = UDim2.new(
            startPos.X.Scale, 
            newX,
            startPos.Y.Scale, 
            newY
        )
    end
    
    -- 设置拖动区域
    ScriptTitle.InputBegan:Connect(onInputBegan)
    Open.InputBegan:Connect(onInputBegan)
    Main.InputBegan:Connect(onInputBegan)
    
    Main.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            dragInput = input
        end
    end)
    
    services.UserInputService.InputChanged:Connect(function(input)
        if dragging then
            updateDrag(input)
        end
    end)
    
    -- 添加键盘快捷键来显示/隐藏UI
    services.UserInputService.InputBegan:Connect(function(input, processed)
        if processed then return end
        
        if input.KeyCode == Enum.KeyCode.LeftControl then
            uiVisible = not uiVisible
            Main.Visible = uiVisible
            updateIcon()
        end
    end)
    
    local OpenStroke = Instance.new("UIStroke")
    OpenStroke.Color = Color3.fromRGB(10, 10, 30)
    OpenStroke.Thickness = 1
    OpenStroke.Parent = Open
    
    Open.MouseButton1Click:Connect(function()
        Main.Visible = not Main.Visible
    end)
    
    UIG.Parent = Open
    
    local window = {}
    
    function window.Tab(window, name, icon)
        local Tab = Instance.new("ScrollingFrame")
        local TabIco = Instance.new("ImageLabel")
        local TabText = Instance.new("TextLabel")
        local TabBtn = Instance.new("TextButton")
        local TabL = Instance.new("UIListLayout")
        
        Tab.Name = "Tab"
        Tab.Parent = TabMain
        Tab.Active = true
        Tab.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        Tab.BackgroundTransparency = 1.000
        Tab.Size = UDim2.new(1, 0, 1, 0)
        Tab.ScrollBarThickness = 2
        Tab.Visible = false
        
        TabIco.Name = "TabIco"
        TabIco.Parent = TabBtns
        TabIco.BackgroundTransparency = 1.000
        TabIco.BorderSizePixel = 0
        TabIco.Size = UDim2.new(0, 24, 0, 24)
        TabIco.Image = ("rbxassetid://%s"):format((icon or 4370341699))
        TabIco.ImageColor3 = StarLight
        TabIco.ImageTransparency = 0.2
        
        TabText.Name = "TabText"
        TabText.Parent = TabIco
        TabText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        TabText.BackgroundTransparency = 1.000
        TabText.Position = UDim2.new(1.41666663, 0, 0, 0)
        TabText.Size = UDim2.new(0, 76, 0, 24)
        TabText.Font = Enum.Font.GothamSemibold
        TabText.Text = name
        TabText.TextColor3 = TextColor
        TabText.TextSize = 14.000
        TabText.TextTransparency = 0.2
        TabText.TextXAlignment = Enum.TextXAlignment.Left
        
        local TabTextStroke = Instance.new("UIStroke")
        TabTextStroke.Color = Color3.fromRGB(10, 10, 30)
        TabTextStroke.Thickness = 1
        TabTextStroke.Transparency = 0.5
        TabTextStroke.Parent = TabText
        
        TabBtn.Name = "TabBtn"
        TabBtn.Parent = TabIco
        TabBtn.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        TabBtn.BackgroundTransparency = 1.000
        TabBtn.BorderSizePixel = 0
        TabBtn.Size = UDim2.new(0, 110, 0, 24)
        TabBtn.AutoButtonColor = false
        TabBtn.Font = Enum.Font.SourceSans
        TabBtn.Text = ""
        TabBtn.TextColor3 = Color3.fromRGB(0, 0, 0)
        TabBtn.TextSize = 14.000
        
        TabL.Name = "TabL"
        TabL.Parent = Tab
        TabL.SortOrder = Enum.SortOrder.LayoutOrder
        TabL.Padding = UDim.new(0, 4)
        
        TabBtn.MouseButton1Click:Connect(function()
            spawn(function()
                Ripple(TabBtn)
            end)
            switchTab({ TabIco, Tab })
        end)
        
        if library.currentTab == nil then
            switchTab({ TabIco, Tab })
        end
        
        TabL:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
            Tab.CanvasSize = UDim2.new(0, 0, 0, TabL.AbsoluteContentSize.Y + 8)
        end)
        
        local tab = {}
        
        function tab.section(tab, name, TabVal)
            local Section = Instance.new("Frame")
            local SectionC = Instance.new("UICorner")
            local SectionText = Instance.new("TextLabel")
            local SectionOpen = Instance.new("ImageLabel")
            local SectionOpened = Instance.new("ImageLabel")
            local SectionToggle = Instance.new("ImageButton")
            local Objs = Instance.new("Frame")
            local ObjsL = Instance.new("UIListLayout")
            
            Section.Name = "Section"
            Section.Parent = Tab
            Section.BackgroundColor3 = zyColor
            Section.BackgroundTransparency = 0.5  -- 半透明效果
            Section.BorderSizePixel = 0
            Section.ClipsDescendants = true
            Section.Size = UDim2.new(0.981000006, 0, 0, 36)
            
            SectionC.CornerRadius = UDim.new(0, 6)
            SectionC.Name = "SectionC"
            SectionC.Parent = Section
            
            SectionText.Name = "SectionText"
            SectionText.Parent = Section
            SectionText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            SectionText.BackgroundTransparency = 1.000
            SectionText.Position = UDim2.new(0.0887396261, 0, 0, 0)
            SectionText.Size = UDim2.new(0, 401, 0, 36)
            SectionText.Font = Enum.Font.GothamBold
            SectionText.Text = name
            SectionText.TextColor3 = TextColor
            SectionText.TextSize = 16.000
            SectionText.TextTransparency = 0
            SectionText.TextXAlignment = Enum.TextXAlignment.Left
            
            local SectionTextStroke = Instance.new("UIStroke")
            SectionTextStroke.Color = Color3.fromRGB(10, 10, 30)
            SectionTextStroke.Thickness = 1
            SectionTextStroke.Parent = SectionText
            
            SectionOpen.Name = "SectionOpen"
            SectionOpen.Parent = SectionText
            SectionOpen.BackgroundTransparency = 1
            SectionOpen.BorderSizePixel = 0
            SectionOpen.Position = UDim2.new(0, -33, 0, 5)
            SectionOpen.Size = UDim2.new(0, 26, 0, 26)
            SectionOpen.Image = "http://www.roblox.com/asset/?id=6031302934"
            SectionOpen.ImageColor3 = StarLight
            
            SectionOpened.Name = "SectionOpened"
            SectionOpened.Parent = SectionOpen
            SectionOpened.BackgroundTransparency = 1.000
            SectionOpened.BorderSizePixel = 0
            SectionOpened.Size = UDim2.new(0, 26, 0, 26)
            SectionOpened.Image = "http://www.roblox.com/asset/?id=6031302932"
            SectionOpened.ImageTransparency = 1.000
            SectionOpened.ImageColor3 = StarLight
            
            SectionToggle.Name = "SectionToggle"
            SectionToggle.Parent = SectionOpen
            SectionToggle.BackgroundTransparency = 1
            SectionToggle.BorderSizePixel = 0
            SectionToggle.Size = UDim2.new(0, 26, 0, 26)
            
            Objs.Name = "Objs"
            Objs.Parent = Section
            Objs.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            Objs.BackgroundTransparency = 1
            Objs.BorderSizePixel = 0
            Objs.Position = UDim2.new(0, 6, 0, 36)
            Objs.Size = UDim2.new(0.986347735, 0, 0, 0)
            
            ObjsL.Name = "ObjsL"
            ObjsL.Parent = Objs
            ObjsL.SortOrder = Enum.SortOrder.LayoutOrder
            ObjsL.Padding = UDim.new(0, 8)
            
            local open = TabVal
            if TabVal ~= false then
                Section.Size = UDim2.new(0.981000006, 0, 0, open and 36 + ObjsL.AbsoluteContentSize.Y + 8 or 36)
                SectionOpened.ImageTransparency = (open and 0 or 1)
                SectionOpen.ImageTransparency = (open and 1 or 0)
            end
            
            SectionToggle.MouseButton1Click:Connect(function()
                open = not open
                Section.Size = UDim2.new(0.981000006, 0, 0, open and 36 + ObjsL.AbsoluteContentSize.Y + 8 or 36)
                SectionOpened.ImageTransparency = (open and 0 or 1)
                SectionOpen.ImageTransparency = (open and 1 or 0)
            end)
            
            ObjsL:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
                if not open then
                    return
                end
                Section.Size = UDim2.new(0.981000006, 0, 0, 36 + ObjsL.AbsoluteContentSize.Y + 8)
            end)
            
            local section = {}
            
            -- 由于篇幅限制，这里省略了Button, Toggle, Keybind等UI元素的创建函数
            -- 实际使用时请确保包含这些函数
            
            return section
        end
        return tab
    end
    
    -- 添加高对比度切换功能
    function library.SetHighContrast(enabled)
        if enabled then
            TextColor = Color3.fromRGB(255, 255, 255)
            PlaceholderColor = Color3.fromRGB(200, 200, 200)
            Background = Color3.fromRGB(0, 0, 0)
            zyColor = Color3.fromRGB(20, 20, 40)
        else
            TextColor = StarLight
            PlaceholderColor = Color3.fromRGB(150, 150, 180)
            Background = BlackHoleBlack
            zyColor = AccretionDiskPurple
        end
        
        -- 更新所有文本元素
        local textElements = {
            ScriptTitle,
            Open,
            -- 添加更多需要更新的文本元素
        }
        
        for _, element in pairs(textElements) do
            if element and element:IsA("TextLabel") or element:IsA("TextButton") or element:IsA("TextBox") then
                element.TextColor3 = TextColor
            end
        end
        
        -- 更新背景颜色
        Main.BackgroundColor3 = Background
    end
    
    return window
end

return library